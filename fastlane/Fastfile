# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:mac)

platform :ios do
    before_all do
        brew(command:"upgrade swiftlint")
    end

    desc "Perform local test"
    lane :local do
        swiftlint(
            mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
            output_file: "swiftlint.result.json", # The path of the output file (optional)
            ignore_exit_status: true    # Allow fastlane to continue even if SwiftLint returns a non-zero exit status
        )
        spm(
            command: "update"
        )
        spm(
            command: "test"
        )
    end

    desc "Perform test on CICD"
    lane :cicd do
        danger(
            dangerfile: "Dangerfile",
            verbose: true
        )

        swiftlint(
            mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
            output_file: "swiftlint.result.json", # The path of the output file (optional)
            ignore_exit_status: true    # Allow fastlane to continue even   if SwiftLint returns a non-zero exit status
        )
        spm(
            command: "update"
        )
        spm(
            command: "test"
        )
    end
end

platform :mac do
    before_all do
        brew(command:"upgrade swiftlint")
    end

    desc "Perform local test"
    lane :local do
        swiftlint(
            mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
            output_file: "swiftlint.result.json", # The path of the output file (optional)
            ignore_exit_status: true    # Allow fastlane to continue even if SwiftLint returns a non-zero exit status
        )
        spm(
            command: "update"
        )
        spm(
            command: "test"
        )
    end

    desc "Perform test on CICD"
    lane :cicd do
        danger(
            dangerfile: "Dangerfile",
            verbose: true
        )
        brew(command:"install swiftlint")
        swiftlint(
            mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
            output_file: "swiftlint.result.json", # The path of the output file (optional)
            ignore_exit_status: true    # Allow fastlane to continue even   if SwiftLint returns a non-zero exit status
        )
        spm(
            command: "update"
        )
        spm(
            command: "test"
        )
    end
end
